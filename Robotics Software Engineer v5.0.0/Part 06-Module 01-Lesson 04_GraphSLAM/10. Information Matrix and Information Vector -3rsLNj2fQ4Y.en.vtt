WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.370
Now that we know what multi-dimensional constraints look like,

00:00:03.370 --> 00:00:06.509
it's time to learn a more elegant solution to solving

00:00:06.509 --> 00:00:10.625
the system of linear equations produced by a graph of constraints.

00:00:10.625 --> 00:00:14.070
The information matrix, and information vector,

00:00:14.070 --> 00:00:18.969
are two data structures that we will use to store information from our constraints.

00:00:18.969 --> 00:00:22.048
The information matrix is denoted Omega,

00:00:22.050 --> 00:00:24.885
and the information vector Xi.

00:00:24.885 --> 00:00:30.929
Fundamentally, the information matrix is the inverse of the co-variance matrix.

00:00:30.928 --> 00:00:33.600
This means that higher certainty is represented with

00:00:33.600 --> 00:00:36.270
larger values in the information matrix,

00:00:36.270 --> 00:00:39.080
the opposite of the covariance matrix,

00:00:39.079 --> 00:00:42.329
where complete certainty was represented by zero.

00:00:42.329 --> 00:00:44.728
The Matrix and vector hold over all of

00:00:44.728 --> 00:00:48.118
the poses and all of the features in the environment.

00:00:48.118 --> 00:00:52.329
Every off-diagonal cell in the matrix is a link between two poses,

00:00:52.329 --> 00:00:55.454
a pose and a feature or two features.

00:00:55.454 --> 00:00:58.179
When no information is available about a link,

00:00:58.179 --> 00:01:00.664
the cell has a value of zero.

00:01:00.664 --> 00:01:03.990
The information matrix and information vector exploit

00:01:03.990 --> 00:01:08.504
the additive property of the negative log likelihoods of constraints.

00:01:08.504 --> 00:01:11.661
For a system with linear measurement and motion models,

00:01:11.661 --> 00:01:13.620
the constraints can be populated into

00:01:13.620 --> 00:01:18.490
the information matrix and information vector in an additive manner.

00:01:18.489 --> 00:01:21.629
On the left, you can see the start of a graph that

00:01:21.629 --> 00:01:25.829
a robot constructed as it moved around some environment.

00:01:25.828 --> 00:01:28.233
The graph contains five constraints.

00:01:28.233 --> 00:01:31.286
One initial constraint, two motion constraints,

00:01:31.287 --> 00:01:33.134
and two measurement constraints.

00:01:33.135 --> 00:01:36.420
This graph will be used to demonstrate at a high level

00:01:36.420 --> 00:01:40.215
how the information matrix and vector can be populated.

00:01:40.215 --> 00:01:45.015
To begin with, they are populated successively with each constraint.

00:01:45.015 --> 00:01:51.129
The initial constraint will tie the pose 'x0' to a value usually zero.

00:01:51.129 --> 00:01:54.914
This constraint will populate one cell in the information matrix,

00:01:54.915 --> 00:01:57.025
and one in the information vector.

00:01:57.025 --> 00:02:00.800
Next, let's look at the motion constraint between 'x0' and 'x1'.

00:02:00.799 --> 00:02:04.170
A motion constraint will tie together

00:02:04.170 --> 00:02:08.199
two robot poses populating four cells in the matrix,

00:02:08.199 --> 00:02:10.224
and two in the vector.

00:02:10.223 --> 00:02:14.168
These are the cells that relate 'x0' an 'x1' to each other.

00:02:14.169 --> 00:02:17.224
Similarly, a measurement constraint will update

00:02:17.223 --> 00:02:20.823
four cells in the matrix and two in the vector.

00:02:20.824 --> 00:02:24.560
These are the cells that relate the feature to the pose from which it was measured.

00:02:24.560 --> 00:02:28.030
In this case 'm1' to 'x1'.

00:02:28.030 --> 00:02:32.479
Recall that any new formation supplied to the matrix and vector is additive.

00:02:32.479 --> 00:02:34.609
This process continues.

00:02:34.610 --> 00:02:38.400
The next constraint ties together poses 'x1' and 'x2',

00:02:38.400 --> 00:02:43.205
and the following constraint ties feature 'm1' to the pose 'x2.'

00:02:43.205 --> 00:02:47.856
Once every constraint has been added to the information matrix and information vector,

00:02:47.855 --> 00:02:50.293
it is considered to be populated.

00:02:50.294 --> 00:02:53.000
It is common for the number of poses and features

00:02:53.000 --> 00:02:56.413
to be in the thousands or even tens of thousands.

00:02:56.413 --> 00:03:01.839
The information matrix is considered sparse because most off-diagonal elements are zero,

00:03:01.840 --> 00:03:04.900
since there is no relative information to tie them together.

00:03:04.900 --> 00:03:09.349
This sparsity is very valuable when it comes to

00:03:09.348 --> 00:03:14.369
solving the system of equations that is embedded in the information matrix and vector.

00:03:14.370 --> 00:03:17.420
And this is what we will explore next.

