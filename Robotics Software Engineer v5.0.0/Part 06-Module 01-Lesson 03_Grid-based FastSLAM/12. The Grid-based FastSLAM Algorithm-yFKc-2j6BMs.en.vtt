WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.115
The sampling motion, map estimation and

00:00:03.115 --> 00:00:07.900
important weight techniques are the essence of the Grid-based FastSLAM algorithm.

00:00:07.900 --> 00:00:11.669
Grid-based FastSLAM implements them to estimate

00:00:11.669 --> 00:00:16.620
both the map and the robot trajectory giving the measurements and the control.

00:00:16.620 --> 00:00:21.300
Here's the Grid-based FastSLAM algorithm which looks very similar to

00:00:21.300 --> 00:00:27.480
the MCL algorithm with some additional statements concerning the map estimation.

00:00:27.480 --> 00:00:30.510
In fact, this algorithm is the result of

00:00:30.510 --> 00:00:34.725
combining the MCL algorithm and the occupancy grid mapping one.

00:00:34.725 --> 00:00:36.960
As in the MCL algorithm,

00:00:36.960 --> 00:00:40.049
the Grid-based FastSLAM algorithm is composed

00:00:40.049 --> 00:00:43.654
of two sections represented by two full loops.

00:00:43.655 --> 00:00:47.370
The first section includes the motion, sensor,

00:00:47.369 --> 00:00:49.320
and not update steps,

00:00:49.320 --> 00:00:52.920
and the second one includes the re-sampling process.

00:00:52.920 --> 00:00:58.401
At each iteration, the algorithm takes the previous belief or pose,

00:00:58.401 --> 00:01:03.460
the activation command, and the sensor measurements as input.

00:01:03.460 --> 00:01:09.765
Initially, the hypothetical belief is obtained by randomly generating M particles.

00:01:09.765 --> 00:01:12.299
Then, in the first section,

00:01:12.299 --> 00:01:15.674
each particle implements the three techniques covered

00:01:15.674 --> 00:01:19.454
earlier to estimate the k particles current pose,

00:01:19.454 --> 00:01:22.709
likelihood of the measurement, and the map.

00:01:22.709 --> 00:01:27.599
Each particle begins by implementing the sampling technique in

00:01:27.599 --> 00:01:32.869
the sample motion model to estimate the current pose of the k particle.

00:01:32.870 --> 00:01:36.180
Next, in the measurement update step,

00:01:36.180 --> 00:01:40.135
each particle implements the important Suede technique in

00:01:40.135 --> 00:01:43.020
the measurement model map function to estimate

00:01:43.019 --> 00:01:47.239
the current likelihood of the k particle measurement.

00:01:47.239 --> 00:01:51.089
Moving on to the map update step, here,

00:01:51.090 --> 00:01:55.375
each particle will implement the map estimation technique into

00:01:55.375 --> 00:02:01.349
updated occupancy grid map function to estimate the current k particle map.

00:02:01.349 --> 00:02:07.519
This map estimation problem will be solved under the occupancy grid mapping algorithm.

00:02:07.519 --> 00:02:11.789
Now, the newly estimated k particle pose map

00:02:11.789 --> 00:02:17.669
and likelihood of the measurements are all added to the hypothetical belief.

00:02:17.669 --> 00:02:20.354
Moving on to the second section of the algorithm,

00:02:20.354 --> 00:02:25.500
re-sampling process happen through re-sampling wheel.

00:02:25.500 --> 00:02:28.199
Here, particles with measurement values close to

00:02:28.199 --> 00:02:32.454
the robot's measurement value survive and are redrawn in the next iteration,

00:02:32.455 --> 00:02:35.060
while the others die.

00:02:35.060 --> 00:02:40.800
The surviving particles poses end map are added to the system belief.

00:02:40.800 --> 00:02:44.640
Finally, the algorithm outputs the new belief and

00:02:44.639 --> 00:02:49.346
another cycle of iterations starts implementing the newly completed belief,

00:02:49.347 --> 00:02:53.000
the next motion and the new sensor measurements.

