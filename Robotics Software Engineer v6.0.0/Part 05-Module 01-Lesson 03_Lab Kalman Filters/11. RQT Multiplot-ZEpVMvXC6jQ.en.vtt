WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.370
So far, you've controlled the robot and

00:00:02.370 --> 00:00:05.070
generated the filtered and unfiltered trajectories.

00:00:05.070 --> 00:00:09.210
Also, you saw how EKF can estimate the pose of the robot,

00:00:09.210 --> 00:00:11.910
but we are still unable to quantitatively

00:00:11.910 --> 00:00:16.035
visualize how close the filter pass is from the unfiltered one.

00:00:16.035 --> 00:00:19.199
To do this, you can use the rqt_plot which is

00:00:19.199 --> 00:00:23.789
a great cross package to graph the values echoed by different topics.

00:00:23.789 --> 00:00:28.418
Using rqt_plot, you can graph the filtered and unfiltered robot poses,

00:00:28.419 --> 00:00:32.520
but rqt_plot can only generate graphs with respect to time.

00:00:32.520 --> 00:00:37.650
So, it can be used to plot the Y position of our robot versus its X position.

00:00:37.649 --> 00:00:41.759
In this lab, you will use the rqt multi-plot since you can

00:00:41.759 --> 00:00:45.750
define both the Y and X-Axis when generating the graphs.

00:00:45.750 --> 00:00:49.619
Rqt Multiplot is not installed by default on your system.

00:00:49.619 --> 00:00:54.524
So, pause the video and go through the steps in the instruction notes to install it.

00:00:54.524 --> 00:00:58.664
In rqt Multiplot, select the Configure plot settings.

00:00:58.664 --> 00:01:04.439
Let's give a title for our plot as RobotYPosvsXPos.

00:01:04.439 --> 00:01:08.234
Now, define the unfiltered and filtered curve.

00:01:08.234 --> 00:01:10.859
Start with the unfiltered curve.

00:01:10.859 --> 00:01:14.250
Select Add a Curve and then,

00:01:14.250 --> 00:01:20.864
give it a title as UnfilteredYPosvsXPos.

00:01:20.864 --> 00:01:23.204
In the X-Axis, select the /odom X topic.

00:01:23.204 --> 00:01:25.635
Since we are plotting y versus x,

00:01:25.635 --> 00:01:28.605
select the y odom topic in the Y-Axis.

00:01:28.605 --> 00:01:33.825
Keep the color as red since we chose the red color for the unfiltered trajectory earlier.

00:01:33.825 --> 00:01:37.575
Now, follow the same steps and define the filtered curve.

00:01:37.575 --> 00:01:40.094
Again, select the new curve.

00:01:40.094 --> 00:01:44.765
Change the title to FilteredYPosvsXPos.

00:01:44.765 --> 00:01:49.090
Then, select the filtered x and y positions topics in the X and

00:01:49.090 --> 00:01:54.400
Y-Axis respectively and change the color to green to match the filter trajectory.

00:01:54.400 --> 00:01:56.635
The graphs are posed by default.

00:01:56.635 --> 00:01:59.815
So, press Play and start driving your robot around.

00:01:59.814 --> 00:02:05.289
Now, you can quantitatively visualize how close the filtered path is from

00:02:05.290 --> 00:02:07.990
the unfiltered one and how your EKF is

00:02:07.989 --> 00:02:12.219
filtering the uncertainties and estimating the pose of the robot.

00:02:12.219 --> 00:02:16.794
Keep playing around with rqt plot and graph the orientation of the robot.

00:02:16.794 --> 00:02:20.219
Then, save the plot as an image and share it with your classmates.

